>>> response
<200 https://docs.scrapy.org/en/latest/_static/selectors-sample1.html>
>>> response.css('title::text')
[<Selector xpath='descendant-or-self::title/text()' data='Example website'>]
>>> response.css('title::text').get()
'Example website'
>>> response.css('title::text').getall()
['Example website']
>>> response.xpath('\\title\text').getall()
Traceback (most recent call last):
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 256, in xpath
    **kwargs)
  File "src\lxml\etree.pyx", line 1582, in lxml.etree._Element.xpath
  File "src\lxml\xpath.pxi", line 305, in lxml.etree.XPathElementEvaluator.__call__
  File "src\lxml\xpath.pxi", line 225, in lxml.etree._XPathEvaluatorBase._handle_result
lxml.etree.XPathEvalError: Invalid expression

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\scrapy\http\response\text.py", line 139, in xpath
    return self.selector.xpath(query, **kwargs)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 260, in xpath
    six.reraise(ValueError, ValueError(msg), sys.exc_info()[2])
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 256, in xpath
    **kwargs)
  File "src\lxml\etree.pyx", line 1582, in lxml.etree._Element.xpath
  File "src\lxml\xpath.pxi", line 305, in lxml.etree.XPathElementEvaluator.__call__
  File "src\lxml\xpath.pxi", line 225, in lxml.etree._XPathEvaluatorBase._handle_result
ValueError: XPath error: Invalid expression in \title   ext
>>> response.xpath('\\title\text()').getall()
Traceback (most recent call last):
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 256, in xpath
    **kwargs)
  File "src\lxml\etree.pyx", line 1582, in lxml.etree._Element.xpath
  File "src\lxml\xpath.pxi", line 305, in lxml.etree.XPathElementEvaluator.__call__
  File "src\lxml\xpath.pxi", line 225, in lxml.etree._XPathEvaluatorBase._handle_result
lxml.etree.XPathEvalError: Invalid expression

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\scrapy\http\response\text.py", line 139, in xpath
    return self.selector.xpath(query, **kwargs)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 260, in xpath
    six.reraise(ValueError, ValueError(msg), sys.exc_info()[2])
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 256, in xpath
    **kwargs)
  File "src\lxml\etree.pyx", line 1582, in lxml.etree._Element.xpath
  File "src\lxml\xpath.pxi", line 305, in lxml.etree.XPathElementEvaluator.__call__
  File "src\lxml\xpath.pxi", line 225, in lxml.etree._XPathEvaluatorBase._handle_result
ValueError: XPath error: Invalid expression in \title   ext()
>>> response.xpath('//title/text()').getall()
['Example website']
>>> response.css('div#images img::attr(src)').getall()
['image1_thumb.jpg', 'image2_thumb.jpg', 'image3_thumb.jpg', 'image4_thumb.jpg', 'image5_thumb.jpg']
>>> response.xpath('//div/[@id="images"]/a/img[@src]')
Traceback (most recent call last):
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 256, in xpath
    **kwargs)
  File "src\lxml\etree.pyx", line 1582, in lxml.etree._Element.xpath
  File "src\lxml\xpath.pxi", line 305, in lxml.etree.XPathElementEvaluator.__call__
  File "src\lxml\xpath.pxi", line 225, in lxml.etree._XPathEvaluatorBase._handle_result
lxml.etree.XPathEvalError: Invalid expression

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\scrapy\http\response\text.py", line 139, in xpath
    return self.selector.xpath(query, **kwargs)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 260, in xpath
    six.reraise(ValueError, ValueError(msg), sys.exc_info()[2])
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 256, in xpath
    **kwargs)
  File "src\lxml\etree.pyx", line 1582, in lxml.etree._Element.xpath
  File "src\lxml\xpath.pxi", line 305, in lxml.etree.XPathElementEvaluator.__call__
  File "src\lxml\xpath.pxi", line 225, in lxml.etree._XPathEvaluatorBase._handle_result
ValueError: XPath error: Invalid expression in //div/[@id="images"]/a/img[@src]
>>> response.xpath('//div[@id="images"]/a/img[@src]')
[<Selector xpath='//div[@id="images"]/a/img[@src]' data='<img src="image1_thumb.jpg">'>, <Selector xpath='//div[@id="images"]/a/img[@src]' data='<img src="image2_thumb.jpg">'>, <Selector xpath='//div[@id="images"]/a/img[@src]' data='<img src="image3_thumb.jpg">'>, <Selector xpath='//div[@id="images"]/a/img[@src]' data='<img src="image4_thumb.jpg">'>, <Selector xpath='//div[@id="images"]/a/img[@src]' data='<img src="image5_thumb.jpg">'>]
>>> response.xpath('//div[@id="images"]/a/img[@src]').getall()
['<img src="image1_thumb.jpg">', '<img src="image2_thumb.jpg">', '<img src="image3_thumb.jpg">', '<img src="image4_thumb.jpg">', '<img src="image5_thumb.jpg">']
>>> response.xpath('//div[@id="images"]/a/img[@src]/text()').getall()
[]
>>> response.xpath('//div[@id="images"]/a/img[@src]').getall()
['<img src="image1_thumb.jpg">', '<img src="image2_thumb.jpg">', '<img src="image3_thumb.jpg">', '<img src="image4_thumb.jpg">', '<img src="image5_thumb.jpg">']
>>> response.xpath('//div[@id="images"]/a/img[@src]').get()
'<img src="image1_thumb.jpg">'
>>> response.xpath('//div[@id="images"]/a/img[@src]').get()
'<img src="image1_thumb.jpg">'
>>> response.xpath('//base/@href').get()
'http://example.com/'
>>> response.xpath('//div[@id="images"]/a/img/@src').get()
'image1_thumb.jpg'
>>> response.css("base::attr(href)").get()
'http://example.com/'
>>> response.xpath('a[contains("href","imag")]/@href').get()
>>> response.xpath('a[contains("href","imag")]/@href')
[]
>>> response.xpath('//a[contains("href","imag")]/@href')
[]
>>> response.xpath('//a[contains(@href,"imag")]/@href')
[<Selector xpath='//a[contains(@href,"imag")]/@href' data='image1.html'>, <Selector xpath='//a[contains(@href,"imag")]/@href' data='image2.html'>, <Selector xpath='//a[contains(@href,"imag")]/@href' data='image3.html'>, <Selector xpath='//a[contains(@href,"imag")]/@href' data='image4.html'>, <Selector xpath='//a[contains(@href,"imag")]/@href' data='image5.html'>]
>>> response.xpath('//a[contains(@href,"imag")]/@href').get()
'image1.html'
>>> response.xpath('//a[contains(@href,"imag")]/@href').getall()
['image1.html', 'image2.html', 'image3.html', 'image4.html', 'image5.html']
>>> response.css('a[href*="ima"]::attr(href)').getall()
['image1.html', 'image2.html', 'image3.html', 'image4.html', 'image5.html']
>>> response.xpath('//a/img/@href')
[]
>>> response.xpath('//a/img/@src')
[<Selector xpath='//a/img/@src' data='image1_thumb.jpg'>, <Selector xpath='//a/img/@src' data='image2_thumb.jpg'>, <Selector xpath='//a/img/@src' data='image3_thumb.jpg'>, <Selector xpath='//a/img/@src' data='image4_thumb.jpg'>, <Selector xpath='//a/img/@src' data='image5_thumb.jpg'>]
>>> response.xpath('//a/img/@src').getall()
['image1_thumb.jpg', 'image2_thumb.jpg', 'image3_thumb.jpg', 'image4_thumb.jpg', 'image5_thumb.jpg']
>>> response.xpath('//a/img[contains(@src,"image")]/@src')
[<Selector xpath='//a/img[contains(@src,"image")]/@src' data='image1_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image2_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image3_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image4_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image5_thumb.jpg'>]
>>> response.xpath('//a/img[contains(@src,"image")]/@src').get()
'image1_thumb.jpg'
>>> response.xpath('//a/img[contains(@src,"image")]/@src').getall()
['image1_thumb.jpg', 'image2_thumb.jpg', 'image3_thumb.jpg', 'image4_thumb.jpg', 'image5_thumb.jpg']
>>> response.css('a img[src="*image"]').getall()
[]
>>> response.css('a img[src="image*"]').getall()
[]
>>> response.css('a img[src*="image"]').getall()
['<img src="image1_thumb.jpg">', '<img src="image2_thumb.jpg">', '<img src="image3_thumb.jpg">', '<img src="image4_thumb.jpg">', '<img src="image5_thumb.jpg">']
>>> response.css('a img[src*="image"]::text()').getall()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\scrapy\http\response\text.py", line 142, in css
    return self.selector.css(query)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 282, in css
    return self.xpath(self._css2xpath(query))
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\selector.py", line 285, in _css2xpath
    return self._csstranslator.css_to_xpath(query)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\csstranslator.py", line 107, in css_to_xpath
    return super(HTMLTranslator, self).css_to_xpath(css, prefix)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\cssselect\xpath.py", line 192, in css_to_xpath
    for selector in parse(css))
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\cssselect\xpath.py", line 192, in <genexpr>
    for selector in parse(css))
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\cssselect\xpath.py", line 222, in selector_to_xpath
    xpath = self.xpath_pseudo_element(xpath, selector.pseudo_element)
  File "c:\users\admin\desktop\scrapy practice\scrapy_tutorial\lib\site-packages\parsel\csstranslator.py", line 70, in xpath_pseudo_element
    % pseudo_element.name)
cssselect.xpath.ExpressionError: The functional pseudo-element ::text() is unknown
>>> response.css('a img[src*="image"]::text').getall()
[]
>>> response.css('a img[src*="image"]').getall()
['<img src="image1_thumb.jpg">', '<img src="image2_thumb.jpg">', '<img src="image3_thumb.jpg">', '<img src="image4_thumb.jpg">', '<img src="image5_thumb.jpg">']
>>> response.css('a img[src*="image"]::attr(src)').getall()
['image1_thumb.jpg', 'image2_thumb.jpg', 'image3_thumb.jpg', 'image4_thumb.jpg', 'image5_thumb.jpg']
>>> response.xpath('//a/img[contains(@src,"image")]/@src')
[<Selector xpath='//a/img[contains(@src,"image")]/@src' data='image1_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image2_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image3_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image4_thumb.jpg'>, <Selector xpath='//a/img[contains(@src,"image")]/@src' data='image5_thumb.jpg'>]
>>> response.xpath('//a/img[contains(@src,"image")]/@src').getall()
['image1_thumb.jpg', 'image2_thumb.jpg', 'image3_thumb.jpg', 'image4_thumb.jpg', 'image5_thumb.jpg']
>>> links       = request.xpath('//a[contains(@href,"image")]')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Request' object has no attribute 'xpath'
>>> links       = response.xpath('//a[contains(@href,"image")]')
>>> links
[<Selector xpath='//a[contains(@href,"image")]' data='<a href="image1.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image2.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image3.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image4.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image5.html">Name: My image ...'>]
>>> for i,j in links:
...     print(i,"   ",j_
... }
  File "<console>", line 3
    }
    ^
SyntaxError: invalid syntax
>>> for i,j in links:
...     print(i , " ",j)
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in enumerate(links):
...     print(i , " ",j)
...
0   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image1.html">Name: My image ...'>
1   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image2.html">Name: My image ...'>
2   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image3.html">Name: My image ...'>
3   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image4.html">Name: My image ...'>
4   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image5.html">Name: My image ...'>
>>> for i,j in links:
...     print(f'Link number {i} points to url {j})
  File "<console>", line 2
    print(f'Link number {i} points to url {j})
                                              ^
SyntaxError: EOL while scanning string literal
>>> for i,j in links:
...     img             = links.xpath("//a/@href").get()
...     src             = links.xpath("//img/@src").get()
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in links:
...     src             = links.xpath("//img/@src").get()
...     img             = link.xpath("//a/@href").get()
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in links:
...     src             = link.xpath("//img/@src").get()
...     img             = link.xpath("//a/@href").get()
...     print(src,img)
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> links       = response.xpath('//a[contains(@href,"image")]')
>>> links
[<Selector xpath='//a[contains(@href,"image")]' data='<a href="image1.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image2.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image3.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image4.html">Name: My image ...'>, <Selector xpath='//a[contains(@href,"image")]' data='<a href="image5.html">Name: My image ...'>]
>>> for i,j in links:
...     print(i , " ",j)
...     img             = links.xpath("//a/@href").get()
...     img             = links.xpath("//a/@href").get()
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in links:
...     img             = j.xpath("//a/@href").get()
...     src             = j.xpath("//img/@src").get()
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in links:
...     img             = j.xpath("a/@href").get()
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in links:
...     img             = j.xpath("@href").get()
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in links:
...     print(i,"   ",j)
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: cannot unpack non-iterable Selector object
>>> for i,j in enumerate(links):
...     print(i," ",j)
...
0   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image1.html">Name: My image ...'>
1   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image2.html">Name: My image ...'>
2   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image3.html">Name: My image ...'>
3   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image4.html">Name: My image ...'>
4   <Selector xpath='//a[contains(@href,"image")]' data='<a href="image5.html">Name: My image ...'>
>>> for i,j in enumerate(links):
...     img     = j.xpath("//a/@href
  File "<console>", line 2
    img         = j.xpath("//a/@href
                                   ^
SyntaxError: EOL while scanning string literal
>>> for i,j in enumerate(links):
...     img     = j.xpath("//a/@href").get()
...
>>> for i,j in enumerate(links):
...     img     = j.xpath("//a/@href").get()
...     print(img)
...
image1.html
image1.html
image1.html
image1.html
image1.html
>>> for i,j in enumerate(links):
...     img     = j.xpath("//a/@href").get()
...     src     = j.xpath("//img/@src").get()
...     print(f'Linknumber {i} points to url {img} and image src is {src} ')
...
Linknumber 0 points to url image1.html and image src is image1_thumb.jpg
Linknumber 1 points to url image1.html and image src is image1_thumb.jpg
Linknumber 2 points to url image1.html and image src is image1_thumb.jpg
Linknumber 3 points to url image1.html and image src is image1_thumb.jpg
Linknumber 4 points to url image1.html and image src is image1_thumb.jpg
>>>
>>> response.xpath("//a[contains(@href,'image')]/text()").re("\s.*\s")
[' My image 1 ', ' My image 2 ', ' My image 3 ', ' My image 4 ', ' My image 5 ']
>>> response.xpath("//a[contains(@href,'image')]/text()").re(r'Name:\s*(.*)')
['My image 1 ', 'My image 2 ', 'My image 3 ', 'My image 4 ', 'My image 5 ']
>>> response.xpath("//a[contains(@href,'image')]/text()").re_first(r'Name:\s*(.*)')
'My image 1 '

>>> sel = Selector(text="""
... <ul class="list">
... <li>1</li>
... <li>2</li>
... <li>3</li>
... </ul>
... <ul class="list">
... <li>4</li>
... <li>5</li>
... <li>6</li>
... </ul>""")
>>> sel
<Selector xpath=None data='<html><body><ul class="list">\n<li>1</...'>
>>> xp  = lambda x:sel.xpath(x).getall()
>>> xp
<function <lambda> at 0x000001C4BDC7A1F8>
>>> xp("//ul/li/text()")
['1', '2', '3', '4', '5', '6']
>>> sel.css("ul li::text")
[<Selector xpath='descendant-or-self::ul/descendant-or-self::*/li/text()' data='1'>, <Selector xpath='descendant-or-self::ul/descendant-or-self::*/li/text()' data='2'>, <Selector xpath='descendant-or-self::ul/descendant-or-self::*/li/text()' data='3'>, <Selector xpath='descendant-or-self::ul/descendant-or-self::*/li/text()' data='4'>, <Selector xpath='descendant-or-self::ul/descendant-or-self::*/li/text()' data='5'>, <Selector xpath='descendant-or-self::ul/descendant-or-self::*/li/text()' data='6'>]
>>> sel.css("ul li::text").get()
'1'
>>> sel.css("ul li::text").getall()
['1', '2', '3', '4', '5', '6']
>>> xp("//li[1]")
['<li>1</li>', '<li>4</li>']
>>> xp("//(li)[1]")
>>> xp("(//li)[1]")
['<li>1</li>']
>>> response.xpath("//div[@class='quote']/span//text()").get()
'“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”'
















 